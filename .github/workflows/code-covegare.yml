name: Unit Test With Coverage

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    
jobs:
  test:
    runs-on: ubuntu-latest

    env:
      Solution_Name: Projects/Exadel.ReportHub/Exadel.ReportHub.sln
      Test_Project: Projects/Exadel.ReportHub/Exadel.ReportHub.Tests
      
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore ${{ env.Solution_Name }}

    - name: Build solution
      run: dotnet build ${{ env.Solution_Name }}

    - name: Run tests with code coverage
      run: |
        dotnet test ${{ env.Test_Project }}/Exadel.ReportHub.Tests.csproj \
          /p:CollectCoverage=true \
          /p:CoverletOutputFormat=opencover \
          /p:CoverletOutput=TestResults/coverage.trx

    - name: Install ReportGenerator tool
      run: dotnet tool install --global dotnet-reportgenerator-globaltool

    - name: Generate HTML coverage report
      run: |
        reportgenerator \
        "-reports:${{ env.Test_Project }}/TestResults/coverage.trx" \
        "-targetdir:${{ env.Test_Project }}/TestResults/CoverageReport" -reporttypes:Html
        
    - name: Publish test results (NUnit)
      uses: dorny/test-reporter@v2.0.0
      with:
        name: "NUnit Test Results"
        path: "${{ env.Test_Project }}/TestResults/coverage.trx"
        reporter: "trx"

    - name: Upload coverage report artifact
      uses: actions/upload-artifact@v4
      with:
        name: CoverageReport
        path: ${{ env.Test_Project }}/TestResults/CoverageReport
